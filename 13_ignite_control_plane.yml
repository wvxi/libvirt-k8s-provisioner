---
- name: Install cluster with kubeadm
  vars_files:
    - vars/k8s_cluster.yml
  hosts: masters[0]
  tasks:
    - name: Perform k8s setup
      when: k8s_installed is not defined
      block:
        - name: Start kubeadm install # noqa no-changed-when # noqa command-instead-of-shell
          ansible.builtin.shell: kubeadm init --config /tmp/kubeadm-config.yaml --upload-certs
          become: true

        - name: Get information on generated certificate
          community.crypto.x509_certificate_info:
            path: /etc/kubernetes/pki/ca.crt
          register: cert
          become: true

        - name: Set fact for certificate hash
          ansible.builtin.set_fact:
            kubehash: "sha256:{{ cert.public_key_fingerprints.sha256 | replace(':', '') }}"

        - name: Create kube directory
          ansible.builtin.file:
            path: /home/kube/.kube
            state: directory
            mode: "0755"

        - name: Copy kubeconfig
          ansible.builtin.copy:
            src: /etc/kubernetes/admin.conf
            dest: /home/kube/.kube/config
            remote_src: true
            owner: "{{ ansible_user_id }}"
            group: "{{ ansible_user_id }}"
            mode: "0755"
          become: true

        - name: Fetch kubeconfig file
          ansible.builtin.slurp:
            src: /etc/kubernetes/admin.conf
          register: kube_master
          become: true

        - name: Set kubeconfig as fact
          ansible.builtin.set_fact:
            kubeconfig: "{{ kube_master['content'] | b64decode }}"

        - name: Set a flag if cluster setup is successful
          ansible.builtin.set_fact:
            k8s_installed: true

- name: Verify cluster has been initialized
  vars_files:
    - vars/k8s_cluster.yml
  hosts: vm_host
  tasks:
    - name: Save kubeconfig as file
      ansible.builtin.copy:
        content: "{{ hostvars[groups['masters'][0]]['kubeconfig'] }}"
        dest: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}/admin.kubeconfig"
        mode: "0755"

    - name: Wait for control-plane pods to be up and running
      kubernetes.core.k8s:
        state: present
        api_version: v1
        kind: Pod
        namespace: kube-system
        label_selectors: tier = control-plane
        kubeconfig: "{{ workspace_directory.base_path }}/clusters/{{ k8s.cluster_name | default('k8s-test', true) }}/admin.kubeconfig"
        wait: true
      when: hostvars[groups['masters'][0]].k8s_installed is not defined
